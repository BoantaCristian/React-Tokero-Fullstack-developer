// <auto-generated />
using System;
using BallanceAPI.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BallanceAPI.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BallanceAPI.Models.DbModels.Deposit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount");

                    b.Property<string>("FromAddress");

                    b.Property<int?>("OperationsId");

                    b.HasKey("Id");

                    b.HasIndex("OperationsId");

                    b.ToTable("Deposits");
                });

            modelBuilder.Entity("BallanceAPI.Models.DbModels.Operation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount");

                    b.Property<int?>("OperationTypesId");

                    b.HasKey("Id");

                    b.HasIndex("OperationTypesId");

                    b.ToTable("Operations");
                });

            modelBuilder.Entity("BallanceAPI.Models.DbModels.OperationType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("OperationTypes");
                });

            modelBuilder.Entity("BallanceAPI.Models.DbModels.TradeOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount");

                    b.Property<int?>("OperationsId");

                    b.Property<int?>("TradeOrdersTypesId");

                    b.HasKey("Id");

                    b.HasIndex("OperationsId");

                    b.HasIndex("TradeOrdersTypesId");

                    b.ToTable("TradeOrders");
                });

            modelBuilder.Entity("BallanceAPI.Models.DbModels.TradeOrderType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("TradeOrdersTypes");
                });

            modelBuilder.Entity("BallanceAPI.Models.DbModels.Withdrawal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount");

                    b.Property<int?>("OperationsId");

                    b.Property<string>("ToAddress");

                    b.Property<bool>("WasApprovedByUser2FA");

                    b.HasKey("Id");

                    b.HasIndex("OperationsId");

                    b.ToTable("Withdrawals");
                });

            modelBuilder.Entity("BallanceAPI.Models.DbModels.Deposit", b =>
                {
                    b.HasOne("BallanceAPI.Models.DbModels.Operation", "Operations")
                        .WithMany("Deposits")
                        .HasForeignKey("OperationsId");
                });

            modelBuilder.Entity("BallanceAPI.Models.DbModels.Operation", b =>
                {
                    b.HasOne("BallanceAPI.Models.DbModels.OperationType", "OperationTypes")
                        .WithMany("Operations")
                        .HasForeignKey("OperationTypesId");
                });

            modelBuilder.Entity("BallanceAPI.Models.DbModels.TradeOrder", b =>
                {
                    b.HasOne("BallanceAPI.Models.DbModels.Operation", "Operations")
                        .WithMany("TradeOrders")
                        .HasForeignKey("OperationsId");

                    b.HasOne("BallanceAPI.Models.DbModels.TradeOrderType", "TradeOrdersTypes")
                        .WithMany("TradeOrders")
                        .HasForeignKey("TradeOrdersTypesId");
                });

            modelBuilder.Entity("BallanceAPI.Models.DbModels.Withdrawal", b =>
                {
                    b.HasOne("BallanceAPI.Models.DbModels.Operation", "Operations")
                        .WithMany("Withdrawals")
                        .HasForeignKey("OperationsId");
                });
#pragma warning restore 612, 618
        }
    }
}
